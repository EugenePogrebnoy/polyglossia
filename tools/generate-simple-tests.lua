-- Generate (very) simple tests for gloss files.

-- TODO Make that into a module (see test/run.lua)

local P, C, S, R, match = lpeg.P, lpeg.C, lpeg.S, lpeg.R, lpeg.match

local slash = P'/'
local nonslash = 1 - slash

local ego = arg[0]
local abspath = ego

if not match(slash, ego) then -- Path is not absolute
  abspath = lfs.currentdir() .. '/' .. ego
end

local dirnamepatt = C(slash * (nonslash^1 * slash)^0)
local toolsdir = match(dirnamepatt, abspath) 
local glossdir = toolsdir .. '../tex'
local testdir = toolsdir .. '../tests'

local alnum = S'-_' + R'az' + R'AZ' + R'09'
local glosspatt = P'gloss-' * C(alnum^0) * P'.ldf' * -1

local excludes = {
-- Temporary
'catalan',
'french', 'breton', 'turkish',
-- RTL problem, temporary
'arabic', 'farsi', 'urdu',
-- Indic scripts not supported by luaotfload
'bengali', 'hindi', 'kannada', 'lao', 'malayalam',
'marathi', 'syriac', 'tamil', 'telugu', 'thai',
'sanskrit',
'hebrew' }

local excluded_languages = { }
for _, lang in ipairs(excludes) do
  excluded_languages[lang] = true
end

local testdoc = [[
\documentclass{minimal}

\usepackage{polyglossia}
\setmainlanguage{%s}

\begin{document}

\today.

\end{document}
]]

local basenames = { }
for gloss in lfs.dir(glossdir) do
  local lang = match(glosspatt, gloss)
  if lang and not excluded_languages[lang] then
    f = io.open(testdir .. '/autogenerated/test-gloss-' .. lang .. '.tex', 'w')
    print(lang)
    f:write(string.format(testdoc, lang))
    f:close()
  end
end
